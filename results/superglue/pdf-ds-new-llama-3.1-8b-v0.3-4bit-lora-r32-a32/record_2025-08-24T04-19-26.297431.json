{
  "results": {
    "record": {
      "alias": "record",
      "f1,none": 0.8976342857142862,
      "f1_stderr,none": 0.0029860883859507835,
      "em,none": 0.8896,
      "em_stderr,none": 0.0031340335378906665
    }
  },
  "group_subtasks": {
    "record": []
  },
  "configs": {
    "record": {
      "task": "record",
      "tag": [
        "super-glue-lm-eval-v1"
      ],
      "dataset_path": "super_glue",
      "dataset_name": "record",
      "training_split": "train",
      "validation_split": "validation",
      "process_docs": "def process_docs(dataset: datasets.Dataset):\n    def _process_doc(doc):\n        return {\n            \"passage\": doc[\"passage\"],\n            \"query\": doc[\"query\"],\n            \"entities\": sorted(list(set(doc[\"entities\"]))),\n            \"answers\": sorted(list(set(doc[\"answers\"]))),\n        }\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "def doc_to_text(doc):\n    initial_text, *highlights = doc[\"passage\"].strip().split(\"\\n@highlight\\n\")\n    text = initial_text + \"\\n\\n\"\n    for highlight in highlights:\n        text += f\"  - {highlight}.\\n\"\n    return text\n",
      "doc_to_target": "def doc_to_target(doc):\n    # We only output the first correct entity in a doc\n    return format_answer(query=doc[\"query\"], entity=doc[\"answers\"][0])\n",
      "unsafe_code": false,
      "doc_to_choice": "def doc_to_choice(doc):\n    return [format_answer(query=doc[\"query\"], entity=ans) for ans in doc[\"entities\"]]\n",
      "process_results": "def process_results(doc, results):\n    # ReCoRD's evaluation is actually deceptively simple:\n    # - Pick the maximum likelihood prediction entity\n    # - Evaluate the accuracy and token F1 PER EXAMPLE\n    # - Average over all examples\n    max_idx = np.argmax(np.array([result[0] for result in results]))\n\n    prediction = doc[\"entities\"][max_idx]\n    gold_label_set = doc[\"answers\"]\n    f1 = metric_max_over_ground_truths(\n        squad_metrics.compute_f1, prediction, gold_label_set\n    )\n    em = metric_max_over_ground_truths(\n        squad_metrics.compute_exact, prediction, gold_label_set\n    )\n\n    return {\n        \"f1\": f1,\n        \"em\": em,\n    }\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "f1",
          "aggregation": "mean"
        },
        {
          "metric": "em",
          "higher_is_better": true,
          "aggregation": "mean"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 2.0,
        "pretrained": "unsloth/Meta-Llama-3.1-8B-Instruct",
        "peft": "../../../unslothLora/Llama/pdf-ds-new-llama-3.1-8b-v0.3-4bit-lora-r32-a32",
        "load_in_4bit": true
      }
    }
  },
  "versions": {
    "record": 2.0
  },
  "n-shot": {
    "record": 4
  },
  "higher_is_better": {
    "record": {
      "f1": true,
      "em": true
    }
  },
  "n-samples": {
    "record": {
      "original": 10000,
      "effective": 10000
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=unsloth/Meta-Llama-3.1-8B-Instruct,peft=../../../unslothLora/Llama/pdf-ds-new-llama-3.1-8b-v0.3-4bit-lora-r32-a32,load_in_4bit=True",
    "model_num_parameters": 8114147328,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "a2856192dd7c25b842431f39c179a6c2c2f627d1",
    "peft_sha": "",
    "batch_size": "auto",
    "batch_sizes": [
      16
    ],
    "device": "cuda",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "647c882",
  "date": 1755984372.6375368,
  "pretty_env_info": "PyTorch version: 2.7.0+cu118\nIs debug build: False\nCUDA used to build PyTorch: 11.8\nROCM used to build PyTorch: N/A\n\nOS: linux (x86_64)\nGCC version: (GCC) 12.4.0\nClang version: Could not collect\nCMake version: version 3.26.5\nLibc version: glibc-2.28\n\nPython version: 3.11.11 (main, Dec 11 2024, 16:28:39) [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-4.18.0-553.58.1.el8_10.x86_64-x86_64-with-glibc2.28\nIs CUDA available: True\nCUDA runtime version: 12.2.140\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A100-SXM4-80GB\nNvidia driver version: 535.247.01\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              256\nOn-line CPU(s) list: 0-255\nThread(s) per core:  2\nCore(s) per socket:  64\nSocket(s):           2\nNUMA node(s):        8\nVendor ID:           AuthenticAMD\nCPU family:          23\nModel:               49\nModel name:          AMD EPYC 7742 64-Core Processor\nStepping:            0\nCPU MHz:             2250.000\nCPU max MHz:         2250.0000\nCPU min MHz:         1500.0000\nBogoMIPS:            4491.67\nVirtualization:      AMD-V\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            512K\nL3 cache:            16384K\nNUMA node0 CPU(s):   0-15,128-143\nNUMA node1 CPU(s):   16-31,144-159\nNUMA node2 CPU(s):   32-47,160-175\nNUMA node3 CPU(s):   48-63,176-191\nNUMA node4 CPU(s):   64-79,192-207\nNUMA node5 CPU(s):   80-95,208-223\nNUMA node6 CPU(s):   96-111,224-239\nNUMA node7 CPU(s):   112-127,240-255\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif v_spec_ctrl umip rdpid overflow_recov succor smca sme sev sev_es\n\nVersions of relevant libraries:\n[pip3] mypy_extensions==1.1.0\n[pip3] numpy==2.2.6\n[pip3] nvidia-cublas-cu11==11.11.3.6\n[pip3] nvidia-cublas-cu12==12.6.4.1\n[pip3] nvidia-cuda-cupti-cu11==11.8.87\n[pip3] nvidia-cuda-cupti-cu12==12.6.80\n[pip3] nvidia-cuda-nvrtc-cu11==11.8.89\n[pip3] nvidia-cuda-nvrtc-cu12==12.6.77\n[pip3] nvidia-cuda-runtime-cu11==11.8.89\n[pip3] nvidia-cuda-runtime-cu12==12.6.77\n[pip3] nvidia-cudnn-cu11==9.1.0.70\n[pip3] nvidia-cudnn-cu12==9.5.1.17\n[pip3] nvidia-cufft-cu11==10.9.0.58\n[pip3] nvidia-cufft-cu12==11.3.0.4\n[pip3] nvidia-curand-cu11==10.3.0.86\n[pip3] nvidia-curand-cu12==10.3.7.77\n[pip3] nvidia-cusolver-cu11==11.4.1.48\n[pip3] nvidia-cusolver-cu12==11.7.1.2\n[pip3] nvidia-cusparse-cu11==11.7.5.86\n[pip3] nvidia-cusparse-cu12==12.5.4.2\n[pip3] nvidia-cusparselt-cu12==0.6.3\n[pip3] nvidia-nccl-cu11==2.21.5\n[pip3] nvidia-nccl-cu12==2.26.2\n[pip3] nvidia-nvjitlink-cu12==12.6.85\n[pip3] nvidia-nvtx-cu11==11.8.86\n[pip3] nvidia-nvtx-cu12==12.6.77\n[pip3] onnxruntime==1.22.1\n[pip3] torch==2.7.0+cu118\n[pip3] torchaudio==2.7.0+cu118\n[pip3] torchvision==0.22.0+cu118\n[pip3] triton==3.3.0\n[conda] blas                      1.0                         mkl  \n[conda] cuda-cudart               11.8.89                       0    nvidia\n[conda] cuda-cupti                11.8.87                       0    nvidia\n[conda] cuda-libraries            11.8.0                        0    nvidia\n[conda] cuda-nvrtc                11.8.89                       0    nvidia\n[conda] cuda-nvtx                 11.8.86                       0    nvidia\n[conda] cuda-runtime              11.8.0                        0    nvidia\n[conda] cudatoolkit               11.7.0              hd8887f6_10    nvidia\n[conda] libcublas                 11.11.3.6                     0    nvidia\n[conda] libcufft                  10.9.0.58                     0    nvidia\n[conda] libcurand                 10.3.5.147                    0    nvidia\n[conda] libcusolver               11.4.1.48                     0    nvidia\n[conda] libcusparse               11.7.5.86                     0    nvidia\n[conda] mkl                       2025.0.0           hacee8c2_941  \n[conda] numpy                     2.2.6                    pypi_0    pypi\n[conda] nvidia-cublas-cu11        11.11.3.6                pypi_0    pypi\n[conda] nvidia-cublas-cu12        12.6.4.1                 pypi_0    pypi\n[conda] nvidia-cuda-cupti-cu11    11.8.87                  pypi_0    pypi\n[conda] nvidia-cuda-cupti-cu12    12.6.80                  pypi_0    pypi\n[conda] nvidia-cuda-nvrtc-cu11    11.8.89                  pypi_0    pypi\n[conda] nvidia-cuda-nvrtc-cu12    12.6.77                  pypi_0    pypi\n[conda] nvidia-cuda-runtime-cu11  11.8.89                  pypi_0    pypi\n[conda] nvidia-cuda-runtime-cu12  12.6.77                  pypi_0    pypi\n[conda] nvidia-cudnn-cu11         9.1.0.70                 pypi_0    pypi\n[conda] nvidia-cudnn-cu12         9.5.1.17                 pypi_0    pypi\n[conda] nvidia-cufft-cu11         10.9.0.58                pypi_0    pypi\n[conda] nvidia-cufft-cu12         11.3.0.4                 pypi_0    pypi\n[conda] nvidia-curand-cu11        10.3.0.86                pypi_0    pypi\n[conda] nvidia-curand-cu12        10.3.7.77                pypi_0    pypi\n[conda] nvidia-cusolver-cu11      11.4.1.48                pypi_0    pypi\n[conda] nvidia-cusolver-cu12      11.7.1.2                 pypi_0    pypi\n[conda] nvidia-cusparse-cu11      11.7.5.86                pypi_0    pypi\n[conda] nvidia-cusparse-cu12      12.5.4.2                 pypi_0    pypi\n[conda] nvidia-cusparselt-cu12    0.6.3                    pypi_0    pypi\n[conda] nvidia-nccl-cu11          2.21.5                   pypi_0    pypi\n[conda] nvidia-nccl-cu12          2.26.2                   pypi_0    pypi\n[conda] nvidia-nvjitlink-cu12     12.6.85                  pypi_0    pypi\n[conda] nvidia-nvtx-cu11          11.8.86                  pypi_0    pypi\n[conda] nvidia-nvtx-cu12          12.6.77                  pypi_0    pypi\n[conda] pytorch-cuda              11.8                 h7e8668a_6    pytorch\n[conda] pytorch-mutex             1.0                        cuda    pytorch\n[conda] torch                     2.7.0+cu118              pypi_0    pypi\n[conda] torchaudio                2.7.0+cu118              pypi_0    pypi\n[conda] torchvision               0.22.0+cu118             pypi_0    pypi\n[conda] triton                    3.3.0                    pypi_0    pypi",
  "transformers_version": "4.51.3",
  "lm_eval_version": "0.4.9.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|finetune_right_pad_id|>",
    "128004"
  ],
  "tokenizer_eos_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128009,
  "max_length": 131072,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "../../../unslothLora/Llama/pdf-ds-new-llama-3.1-8b-v0.3-4bit-lora-r32-a32",
  "model_name_sanitized": "..__..__..__unslothLora__Llama__pdf-ds-new-llama-3.1-8b-v0.3-4bit-lora-r32-a32",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 4436062.619470478,
  "end_time": 4453662.823245504,
  "total_evaluation_time_seconds": "17600.203775025904"
}